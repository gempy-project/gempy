
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorials/ch1_fundamentals/ch1_6_2d_visualization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_tutorials_ch1_fundamentals_ch1_6_2d_visualization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorials_ch1_fundamentals_ch1_6_2d_visualization.py:


1.6: 2D Visualization.
======================

.. GENERATED FROM PYTHON SOURCE LINES 7-21

.. code-block:: Python


    import os

    # Importing auxiliary libraries
    import numpy as np

    # Importing GemPy
    import gempy as gp
    import gempy_viewer as gpv

    # sphinx_gallery_thumbnail_number = -1

    np.random.seed(1515)








.. GENERATED FROM PYTHON SOURCE LINES 22-25

Model interpolation
~~~~~~~~~~~~~~~~~~~


.. GENERATED FROM PYTHON SOURCE LINES 27-28

Data Preparation

.. GENERATED FROM PYTHON SOURCE LINES 28-43

.. code-block:: Python

    data_path = os.path.abspath('../../')

    geo_data: gp.data.GeoModel = gp.create_geomodel(
        project_name='viz_2d',
        extent=[0, 1000, 0, 1000, 0, 1000],
        resolution=[10, 10, 10],
        refinement=4,
        importer_helper=gp.data.ImporterHelper(
            path_to_orientations=data_path + "/data/input_data/jan_models/model5_orientations.csv",
            path_to_surface_points=data_path + "/data/input_data/jan_models/model5_surface_points.csv",
        )
    )

    gp.set_topography_from_random(grid=geo_data.grid, d_z=np.array([500, 1000]))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Active grids: GridTypes.NONE|TOPOGRAPHY|DENSE

    <gempy.core.data.grid_modules.topography.Topography object at 0x7fc5bb225030>



.. GENERATED FROM PYTHON SOURCE LINES 44-46

.. code-block:: Python

    gpv.plot_2d(geo_data)




.. image-sg:: /tutorials/ch1_fundamentals/images/sphx_glr_ch1_6_2d_visualization_001.png
   :alt: Cell Number: mid Direction: y
   :srcset: /tutorials/ch1_fundamentals/images/sphx_glr_ch1_6_2d_visualization_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <gempy_viewer.modules.plot_2d.visualization_2d.Plot2D object at 0x7fc5bb224550>



.. GENERATED FROM PYTHON SOURCE LINES 47-51

.. code-block:: Python

    section_dict = {'section1': ([0, 0], [1000, 1000], [100, 80]),
                    'section2': ([800, 0], [800, 1000], [150, 100]),
                    'section3': ([50, 200], [100, 500], [200, 150])}








.. GENERATED FROM PYTHON SOURCE LINES 52-55

.. code-block:: Python

    gp.set_section_grid(geo_data.grid, section_dict)
    gpv.plot_section_traces(geo_data)




.. image-sg:: /tutorials/ch1_fundamentals/images/sphx_glr_ch1_6_2d_visualization_002.png
   :alt: Cell Number: -1 Direction: z
   :srcset: /tutorials/ch1_fundamentals/images/sphx_glr_ch1_6_2d_visualization_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Active grids: GridTypes.NONE|SECTIONS|TOPOGRAPHY|DENSE

    <function plot_section_traces at 0x7fc5c4704b80>



.. GENERATED FROM PYTHON SOURCE LINES 56-58

.. code-block:: Python

    geo_data.grid.sections






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>start</th>
          <th>stop</th>
          <th>resolution</th>
          <th>dist</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>section1</th>
          <td>[0, 0]</td>
          <td>[1000, 1000]</td>
          <td>[100, 80]</td>
          <td>1414.213562</td>
        </tr>
        <tr>
          <th>section2</th>
          <td>[800, 0]</td>
          <td>[800, 1000]</td>
          <td>[150, 100]</td>
          <td>1000.000000</td>
        </tr>
        <tr>
          <th>section3</th>
          <td>[50, 200]</td>
          <td>[100, 500]</td>
          <td>[200, 150]</td>
          <td>304.138127</td>
        </tr>
      </tbody>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 61-74

.. code-block:: Python

    gp.map_stack_to_surfaces(
        gempy_model=geo_data,
        mapping_object={
            "Fault_Series": 'fault',
            "Strat_Series": ('rock2', 'rock1')
        }
    )

    gp.set_is_fault(
        frame=geo_data.structural_frame,
        fault_groups=['Fault_Series']
    )






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

            <table>
              <tr><td>Structural Groups:</td><td>
        <table style="border-left:1.2px solid black;>
          <tr><th colspan="2"><b>StructuralGroup:</b></th></tr>
          <tr><td>Name:</td><td>Fault_Series</td></tr>
          <tr><td>Structural Relation:</td><td>StackRelationType.FAULT</td></tr>
          <tr><td>Elements:</td><td>
        <table width="50%" style="border-left:15px solid #527682;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>fault</td></tr>
        </table>
            </td></tr>
        </table>
            <br>
        <table style="border-left:1.2px solid black;>
          <tr><th colspan="2"><b>StructuralGroup:</b></th></tr>
          <tr><td>Name:</td><td>Strat_Series</td></tr>
          <tr><td>Structural Relation:</td><td>StackRelationType.ERODE</td></tr>
          <tr><td>Elements:</td><td>
        <table width="50%" style="border-left:15px solid #ffbe00;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>rock2</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #9f0052;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>rock1</td></tr>
        </table>
            </td></tr>
        </table>
            </td></tr>
              <tr><td>Fault Relations:</td><td><table style="border-collapse: collapse; table-layout: fixed;"><th></th><th style="transform: rotate(-35deg); height:150px; vertical-align: bottom; text-align: center;">Fault_Seri...</th><th style="transform: rotate(-35deg); height:150px; vertical-align: bottom; text-align: center;">Strat_Seri...</th><tr><th>Fault_Series</th><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td><td style="background-color: #527682; width: 20px; height: 20px; border: 1px solid black;"></td></tr><tr><th>Strat_Series</th><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td></tr></table></td></tr>
              <tr><td></td><td>
            <table>
              <tr>
                <td><div style="display: inline-block; background-color: #527682; width: 20px; height: 20px; border: 1px solid black;"></div> True</td>
                <td><div style="display: inline-block; background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></div> False</td>
              </tr>
            </table>
            </td></tr>
            </table>
        
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 75-77

.. code-block:: Python

    geo_data.grid.active_grids





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <GridTypes.NONE|SECTIONS|TOPOGRAPHY|DENSE: 1050>



.. GENERATED FROM PYTHON SOURCE LINES 78-80

.. code-block:: Python

    gp.compute_model(geo_data)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Setting Backend To: AvailableBackends.numpy


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <b>Solutions:</b> 4 Octree Levels, 3 DualContouringMeshes
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 81-82

new plotting api

.. GENERATED FROM PYTHON SOURCE LINES 82-84

.. code-block:: Python

    gpv.plot_2d(geo_data, section_names=['section1'])




.. image-sg:: /tutorials/ch1_fundamentals/images/sphx_glr_ch1_6_2d_visualization_003.png
   :alt: section1
   :srcset: /tutorials/ch1_fundamentals/images/sphx_glr_ch1_6_2d_visualization_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/leguark/TeamCity/work/3a8738c25f60c3c9/venv/lib/python3.10/site-packages/gempy_viewer/API/_plot_2d_sections_api.py:106: UserWarning: Section contacts not implemented yet. We need to pass scalar field for the sections grid
      warnings.warn(

    <gempy_viewer.modules.plot_2d.visualization_2d.Plot2D object at 0x7fc5bab94700>



.. GENERATED FROM PYTHON SOURCE LINES 85-88

Plot API
--------


.. GENERATED FROM PYTHON SOURCE LINES 91-94

If nothing is passed, a Plot2D object is created and therefore you are
in the same situation as above:


.. GENERATED FROM PYTHON SOURCE LINES 96-98

.. code-block:: Python

    p3 = gpv.plot_2d(geo_data)




.. image-sg:: /tutorials/ch1_fundamentals/images/sphx_glr_ch1_6_2d_visualization_004.png
   :alt: Cell Number: mid Direction: y
   :srcset: /tutorials/ch1_fundamentals/images/sphx_glr_ch1_6_2d_visualization_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 99-102

Alternatively you can pass section\_names, cell\_numbers + direction or
any combination of the above:


.. GENERATED FROM PYTHON SOURCE LINES 104-106

.. code-block:: Python

    gpv.plot_2d(geo_data, section_names=['topography'])




.. image-sg:: /tutorials/ch1_fundamentals/images/sphx_glr_ch1_6_2d_visualization_005.png
   :alt: Geological map
   :srcset: /tutorials/ch1_fundamentals/images/sphx_glr_ch1_6_2d_visualization_005.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/leguark/TeamCity/work/3a8738c25f60c3c9/venv/lib/python3.10/site-packages/gempy_viewer/API/_plot_2d_sections_api.py:106: UserWarning: Section contacts not implemented yet. We need to pass scalar field for the sections grid
      warnings.warn(

    <gempy_viewer.modules.plot_2d.visualization_2d.Plot2D object at 0x7fc5be22fb80>



.. GENERATED FROM PYTHON SOURCE LINES 107-109

.. code-block:: Python

    gpv.plot_2d(geo_data, section_names=['section1'])




.. image-sg:: /tutorials/ch1_fundamentals/images/sphx_glr_ch1_6_2d_visualization_006.png
   :alt: section1
   :srcset: /tutorials/ch1_fundamentals/images/sphx_glr_ch1_6_2d_visualization_006.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/leguark/TeamCity/work/3a8738c25f60c3c9/venv/lib/python3.10/site-packages/gempy_viewer/API/_plot_2d_sections_api.py:106: UserWarning: Section contacts not implemented yet. We need to pass scalar field for the sections grid
      warnings.warn(

    <gempy_viewer.modules.plot_2d.visualization_2d.Plot2D object at 0x7fc5bd904910>



.. GENERATED FROM PYTHON SOURCE LINES 110-112

.. code-block:: Python

    gpv.plot_2d(geo_data, section_names=['section1', 'section2'])




.. image-sg:: /tutorials/ch1_fundamentals/images/sphx_glr_ch1_6_2d_visualization_007.png
   :alt: section1, section2
   :srcset: /tutorials/ch1_fundamentals/images/sphx_glr_ch1_6_2d_visualization_007.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/leguark/TeamCity/work/3a8738c25f60c3c9/venv/lib/python3.10/site-packages/gempy_viewer/API/_plot_2d_sections_api.py:106: UserWarning: Section contacts not implemented yet. We need to pass scalar field for the sections grid
      warnings.warn(

    <gempy_viewer.modules.plot_2d.visualization_2d.Plot2D object at 0x7fc5bd97d9c0>



.. GENERATED FROM PYTHON SOURCE LINES 113-114

.. code-block:: Python

    gpv.plot_2d(geo_data, figsize=(15, 15), section_names=['section1', 'section2', 'topography'], cell_number='mid')



.. image-sg:: /tutorials/ch1_fundamentals/images/sphx_glr_ch1_6_2d_visualization_008.png
   :alt: section1, section2, Geological map, Cell Number: mid Direction: y
   :srcset: /tutorials/ch1_fundamentals/images/sphx_glr_ch1_6_2d_visualization_008.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/leguark/TeamCity/work/3a8738c25f60c3c9/venv/lib/python3.10/site-packages/gempy_viewer/API/_plot_2d_sections_api.py:106: UserWarning: Section contacts not implemented yet. We need to pass scalar field for the sections grid
      warnings.warn(

    <gempy_viewer.modules.plot_2d.visualization_2d.Plot2D object at 0x7fc5bad57f40>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 2.423 seconds)


.. _sphx_glr_download_tutorials_ch1_fundamentals_ch1_6_2d_visualization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: ch1_6_2d_visualization.ipynb <ch1_6_2d_visualization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: ch1_6_2d_visualization.py <ch1_6_2d_visualization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: ch1_6_2d_visualization.zip <ch1_6_2d_visualization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
