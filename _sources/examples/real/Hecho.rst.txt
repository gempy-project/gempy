
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/real/Hecho.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_real_Hecho.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_real_Hecho.py:


Geomodeling benchmark: the "Hecho"-Model
========

This model is part of a geomodeling benchmaring effort. More information (and, hopefully, publication) coming.

.. GENERATED FROM PYTHON SOURCE LINES 7-11

.. code-block:: Python


    import os

    import numpy as np







.. GENERATED FROM PYTHON SOURCE LINES 12-20

.. code-block:: Python


    # Aux imports
    import pandas as pn

    # Importing gempy
    import gempy as gp
    import gempy_viewer as gpv








.. GENERATED FROM PYTHON SOURCE LINES 21-27

Loading surface points from repository:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

With pandas we can do it directly from the web and with the right args
we can directly tidy the data in gempy style:


.. GENERATED FROM PYTHON SOURCE LINES 29-58

.. code-block:: Python


    data_path = os.path.abspath('../../data/input_data/Hecho')
    dfs = []

    # First stratigraphic data
    for letter in range(1, 10):
        dfs.append(pn.read_csv(
            filepath_or_buffer=data_path + '/H' + str(letter) + '.csv',
            sep=';',
            names=['X', 'Y', 'Z', 'surface', '_'],
            header=0
        ))

    # Also faults
    for f in range(1, 4):
        fault_df = pn.read_csv(
            filepath_or_buffer=data_path + '/F' + str(f) + 'Line.csv',
            sep=';',
            names=['X', 'Y', 'Z'],
            header=0
        )
        fault_df['surface'] = 'f' + str(f)
        dfs.append(fault_df)

    # We put all the surfaces points together because is how gempy likes it:
    surface_points = pn.concat(dfs, sort=True)
    surface_points.reset_index(inplace=True, drop=False)
    surface_points.tail()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>index</th>
          <th>X</th>
          <th>Y</th>
          <th>Z</th>
          <th>_</th>
          <th>surface</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>761</th>
          <td>6</td>
          <td>11.14</td>
          <td>-0.17</td>
          <td>1.53</td>
          <td>NaN</td>
          <td>f3</td>
        </tr>
        <tr>
          <th>762</th>
          <td>7</td>
          <td>11.17</td>
          <td>0.28</td>
          <td>1.68</td>
          <td>NaN</td>
          <td>f3</td>
        </tr>
        <tr>
          <th>763</th>
          <td>8</td>
          <td>11.16</td>
          <td>0.40</td>
          <td>1.82</td>
          <td>NaN</td>
          <td>f3</td>
        </tr>
        <tr>
          <th>764</th>
          <td>9</td>
          <td>11.07</td>
          <td>0.03</td>
          <td>1.92</td>
          <td>NaN</td>
          <td>f3</td>
        </tr>
        <tr>
          <th>765</th>
          <td>10</td>
          <td>10.89</td>
          <td>-0.43</td>
          <td>2.10</td>
          <td>NaN</td>
          <td>f3</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 59-61

Now we do the same with the orientations:


.. GENERATED FROM PYTHON SOURCE LINES 63-85

.. code-block:: Python

    orientations = pn.read_csv(
        filepath_or_buffer=data_path + '/Dips.csv',
        sep=';',
        names=['X', 'Y', 'Z', 'G_x', 'G_z', '_'],
        header=0
    )
    # Orientation needs to belong to a surface. This is mainly to categorize to which series belong and to
    # use the same color
    orientations['surface'] = 0

    # We fill the laking direction with a dummy value:
    orientations['G_y'] = 0

    # Replace -99999.00000 with NaN
    orientations.replace(-99999.00000, np.nan, inplace=True)

    # Drop irrelevant columns
    orientations.drop(columns=['_'], inplace=True)

    # Remove rows containing NaN
    orientations.dropna(inplace=True)








.. GENERATED FROM PYTHON SOURCE LINES 86-95

Data initialization:
~~~~~~~~~~~~~~~~~~~~

Suggested size of the axis-aligned modeling box: Origin: 0 -0.5 0
Maximum: 16 0.5 4.5

Suggested resolution: 0.05m (grid size 321 x 21 x 91)

%%

.. GENERATED FROM PYTHON SOURCE LINES 95-133

.. code-block:: Python


    surface_points_table: gp.data.SurfacePointsTable = gp.data.SurfacePointsTable.from_arrays(
        x=surface_points['X'].values,
        y=surface_points['Y'].values,
        z=surface_points['Z'].values,
        names=surface_points['surface'].values.astype(str)
    )

    orientations_table: gp.data.OrientationsTable = gp.data.OrientationsTable.from_arrays(
        x=orientations['X'].values,
        y=orientations['Y'].values,
        z=orientations['Z'].values,
        G_x=orientations['G_x'].values,
        G_y=orientations['G_y'].values,
        G_z=orientations['G_z'].values,
        names=orientations['surface'].values.astype(str),
        name_id_map=surface_points_table.name_id_map  # ! Make sure that ids and names are shared
    )

    structural_frame: gp.data.StructuralFrame = gp.data.StructuralFrame.from_data_tables(
        surface_points=surface_points_table,
        orientations=orientations_table
    )

    geo_model: gp.data.GeoModel = gp.create_geomodel(
        project_name='Moureze',
        extent=[0, 16, -0.5, 0.5, 0, 4.5],
        resolution=[321, 21, 91],
        structural_frame=structural_frame
    )

    gp.set_section_grid(
        grid=geo_model.grid,
        section_dict={
                'section': ([0, 0], [16, 0], [321, 91])
        },
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Active grids: GridTypes.NONE|SECTIONS|DENSE


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>start</th>
          <th>stop</th>
          <th>resolution</th>
          <th>dist</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>section</th>
          <td>[0, 0]</td>
          <td>[16, 0]</td>
          <td>[321, 91]</td>
          <td>16.0</td>
        </tr>
      </tbody>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 134-138

We need an orientation per series/fault. The faults does not have
orientation so the easiest is to create an orientation from the surface
points availablle:


.. GENERATED FROM PYTHON SOURCE LINES 140-155

.. code-block:: Python

    f_names = ['f1', 'f2', 'f3']
    for fn in f_names:
        element = geo_model.structural_frame.get_element_by_name(fn)
        new_orientations = gp.create_orientations_from_surface_points_coords(
            xyz_coords=element.surface_points.xyz
        )
        gp.add_orientations(
            geo_model=geo_model,
            x=new_orientations.data['X'],
            y=new_orientations.data['Y'],
            z=new_orientations.data['Z'],
            pole_vector=new_orientations.grads,
            elements_names=fn
        )








.. GENERATED FROM PYTHON SOURCE LINES 156-158

Now we can see how the data looks so far:


.. GENERATED FROM PYTHON SOURCE LINES 160-162

.. code-block:: Python

    gpv.plot_2d(geo_model)




.. image-sg:: /examples/real/images/sphx_glr_Hecho_001.png
   :alt: Cell Number: mid Direction: y
   :srcset: /examples/real/images/sphx_glr_Hecho_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <gempy_viewer.modules.plot_2d.visualization_2d.Plot2D object at 0x7fc55bc80790>



.. GENERATED FROM PYTHON SOURCE LINES 163-165

By default all surfaces belong to one unique series.


.. GENERATED FROM PYTHON SOURCE LINES 167-169

.. code-block:: Python

    geo_model.structural_frame






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

            <table>
              <tr><td>Structural Groups:</td><td>
        <table style="border-left:1.2px solid black;>
          <tr><th colspan="2"><b>StructuralGroup:</b></th></tr>
          <tr><td>Name:</td><td>default_formation</td></tr>
          <tr><td>Structural Relation:</td><td>StackRelationType.ERODE</td></tr>
          <tr><td>Elements:</td><td>
        <table width="50%" style="border-left:15px solid #015482;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>0</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #9f0052;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>0.78</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #ffbe00;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>1.15</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #728f02;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>1.9</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #443988;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>2.5</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #ff3f20;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>3.1</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #5DA629;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>3.9</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #b271d0;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>4.4</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #72e54a;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>5.2</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #583bd1;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>f1</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #d0e63d;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>f2</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #b949e2;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>f3</td></tr>
        </table>
            </td></tr>
        </table>
            </td></tr>
              <tr><td>Fault Relations:</td><td><table style="border-collapse: collapse; table-layout: fixed;"><th></th><th style="transform: rotate(-35deg); height:150px; vertical-align: bottom; text-align: center;">default_fo...</th><tr><th>default_formation</th><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td></tr></table></td></tr>
              <tr><td></td><td>
            <table>
              <tr>
                <td><div style="display: inline-block; background-color: #527682; width: 20px; height: 20px; border: 1px solid black;"></div> True</td>
                <td><div style="display: inline-block; background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></div> False</td>
              </tr>
            </table>
            </td></tr>
            </table>
        
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 170-172

We will need to separate with surface belong to each series:


.. GENERATED FROM PYTHON SOURCE LINES 174-179

.. code-block:: Python

    gp.map_stack_to_surfaces(
        gempy_model=geo_model,
        mapping_object={'Fault1': 'f1', 'Fault2': 'f2', 'Fault3': 'f3'}
    )






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

            <table>
              <tr><td>Structural Groups:</td><td>
        <table style="border-left:1.2px solid black;>
          <tr><th colspan="2"><b>StructuralGroup:</b></th></tr>
          <tr><td>Name:</td><td>Fault1</td></tr>
          <tr><td>Structural Relation:</td><td>StackRelationType.ERODE</td></tr>
          <tr><td>Elements:</td><td>
        <table width="50%" style="border-left:15px solid #583bd1;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>f1</td></tr>
        </table>
            </td></tr>
        </table>
            <br>
        <table style="border-left:1.2px solid black;>
          <tr><th colspan="2"><b>StructuralGroup:</b></th></tr>
          <tr><td>Name:</td><td>Fault2</td></tr>
          <tr><td>Structural Relation:</td><td>StackRelationType.ERODE</td></tr>
          <tr><td>Elements:</td><td>
        <table width="50%" style="border-left:15px solid #d0e63d;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>f2</td></tr>
        </table>
            </td></tr>
        </table>
            <br>
        <table style="border-left:1.2px solid black;>
          <tr><th colspan="2"><b>StructuralGroup:</b></th></tr>
          <tr><td>Name:</td><td>Fault3</td></tr>
          <tr><td>Structural Relation:</td><td>StackRelationType.ERODE</td></tr>
          <tr><td>Elements:</td><td>
        <table width="50%" style="border-left:15px solid #b949e2;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>f3</td></tr>
        </table>
            </td></tr>
        </table>
            <br>
        <table style="border-left:1.2px solid black;>
          <tr><th colspan="2"><b>StructuralGroup:</b></th></tr>
          <tr><td>Name:</td><td>default_formation</td></tr>
          <tr><td>Structural Relation:</td><td>StackRelationType.ERODE</td></tr>
          <tr><td>Elements:</td><td>
        <table width="50%" style="border-left:15px solid #015482;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>0</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #9f0052;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>0.78</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #ffbe00;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>1.15</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #728f02;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>1.9</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #443988;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>2.5</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #ff3f20;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>3.1</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #5DA629;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>3.9</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #b271d0;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>4.4</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #72e54a;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>5.2</td></tr>
        </table>
            </td></tr>
        </table>
            </td></tr>
              <tr><td>Fault Relations:</td><td><table style="border-collapse: collapse; table-layout: fixed;"><th></th><th style="transform: rotate(-35deg); height:150px; vertical-align: bottom; text-align: center;">Fault1</th><th style="transform: rotate(-35deg); height:150px; vertical-align: bottom; text-align: center;">Fault2</th><th style="transform: rotate(-35deg); height:150px; vertical-align: bottom; text-align: center;">Fault3</th><th style="transform: rotate(-35deg); height:150px; vertical-align: bottom; text-align: center;">default_fo...</th><tr><th>Fault1</th><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td></tr><tr><th>Fault2</th><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td></tr><tr><th>Fault3</th><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td></tr><tr><th>default_formation</th><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td></tr></table></td></tr>
              <tr><td></td><td>
            <table>
              <tr>
                <td><div style="display: inline-block; background-color: #527682; width: 20px; height: 20px; border: 1px solid black;"></div> True</td>
                <td><div style="display: inline-block; background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></div> False</td>
              </tr>
            </table>
            </td></tr>
            </table>
        
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 180-183

However if we want the faults to offset the “Default series”, they will
need to be more recent (higher on the pile). We can modify the order by:


.. GENERATED FROM PYTHON SOURCE LINES 187-189

Lastly, so far we did not specify which series/faults are actula faults:


.. GENERATED FROM PYTHON SOURCE LINES 191-196

.. code-block:: Python

    gp.set_is_fault(
        frame=geo_model,
        fault_groups=['Fault1', 'Fault2', 'Fault3']
    )






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

            <table>
              <tr><td>Structural Groups:</td><td>
        <table style="border-left:1.2px solid black;>
          <tr><th colspan="2"><b>StructuralGroup:</b></th></tr>
          <tr><td>Name:</td><td>Fault1</td></tr>
          <tr><td>Structural Relation:</td><td>StackRelationType.FAULT</td></tr>
          <tr><td>Elements:</td><td>
        <table width="50%" style="border-left:15px solid #527682;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>f1</td></tr>
        </table>
            </td></tr>
        </table>
            <br>
        <table style="border-left:1.2px solid black;>
          <tr><th colspan="2"><b>StructuralGroup:</b></th></tr>
          <tr><td>Name:</td><td>Fault2</td></tr>
          <tr><td>Structural Relation:</td><td>StackRelationType.FAULT</td></tr>
          <tr><td>Elements:</td><td>
        <table width="50%" style="border-left:15px solid #527682;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>f2</td></tr>
        </table>
            </td></tr>
        </table>
            <br>
        <table style="border-left:1.2px solid black;>
          <tr><th colspan="2"><b>StructuralGroup:</b></th></tr>
          <tr><td>Name:</td><td>Fault3</td></tr>
          <tr><td>Structural Relation:</td><td>StackRelationType.FAULT</td></tr>
          <tr><td>Elements:</td><td>
        <table width="50%" style="border-left:15px solid #527682;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>f3</td></tr>
        </table>
            </td></tr>
        </table>
            <br>
        <table style="border-left:1.2px solid black;>
          <tr><th colspan="2"><b>StructuralGroup:</b></th></tr>
          <tr><td>Name:</td><td>default_formation</td></tr>
          <tr><td>Structural Relation:</td><td>StackRelationType.ERODE</td></tr>
          <tr><td>Elements:</td><td>
        <table width="50%" style="border-left:15px solid #015482;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>0</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #9f0052;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>0.78</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #ffbe00;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>1.15</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #728f02;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>1.9</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #443988;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>2.5</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #ff3f20;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>3.1</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #5DA629;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>3.9</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #b271d0;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>4.4</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #72e54a;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>5.2</td></tr>
        </table>
            </td></tr>
        </table>
            </td></tr>
              <tr><td>Fault Relations:</td><td><table style="border-collapse: collapse; table-layout: fixed;"><th></th><th style="transform: rotate(-35deg); height:150px; vertical-align: bottom; text-align: center;">Fault1</th><th style="transform: rotate(-35deg); height:150px; vertical-align: bottom; text-align: center;">Fault2</th><th style="transform: rotate(-35deg); height:150px; vertical-align: bottom; text-align: center;">Fault3</th><th style="transform: rotate(-35deg); height:150px; vertical-align: bottom; text-align: center;">default_fo...</th><tr><th>Fault1</th><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td><td style="background-color: #527682; width: 20px; height: 20px; border: 1px solid black;"></td></tr><tr><th>Fault2</th><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td><td style="background-color: #527682; width: 20px; height: 20px; border: 1px solid black;"></td></tr><tr><th>Fault3</th><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td><td style="background-color: #527682; width: 20px; height: 20px; border: 1px solid black;"></td></tr><tr><th>default_formation</th><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td></tr></table></td></tr>
              <tr><td></td><td>
            <table>
              <tr>
                <td><div style="display: inline-block; background-color: #527682; width: 20px; height: 20px; border: 1px solid black;"></div> True</td>
                <td><div style="display: inline-block; background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></div> False</td>
              </tr>
            </table>
            </td></tr>
            </table>
        
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 197-201

The default range is always the diagonal of the extent. Since in this
model data is very close we will need to reduce the range to 5-10% of
that value:


.. GENERATED FROM PYTHON SOURCE LINES 203-205

.. code-block:: Python

    geo_model.interpolation_options.kernel_options.range *= 0.2








.. GENERATED FROM PYTHON SOURCE LINES 206-214

Explanation of model characteristics and adjustments
This model has characteristics that make it difficult to get the right default values:
- It is large, and we want high resolution
- Some series have a large conditional number (i.e., the model input is not very stable)
To address these issues:
- Reduce the chunk size during evaluation to trade speed for memory
- Reduce the std of the error parameter in octree refinement, which evaluates fewer voxels but may leave some without refinement
Enable debugging options to help tune these parameters.

.. GENERATED FROM PYTHON SOURCE LINES 216-217

Setting verbose and condition number options for debugging

.. GENERATED FROM PYTHON SOURCE LINES 217-218

.. code-block:: Python

    geo_model.interpolation_options.kernel_options.compute_condition_number = True







.. GENERATED FROM PYTHON SOURCE LINES 219-222

Observations and parameter adjustments
The octree refinement is making the octree grid almost dense, and smaller chunks are needed to avoid running out of memory.
Adjusting parameters accordingly:

.. GENERATED FROM PYTHON SOURCE LINES 222-225

.. code-block:: Python


    geo_model.interpolation_options.evaluation_options.evaluation_chunk_size = 50_000








.. GENERATED FROM PYTHON SOURCE LINES 226-234

.. code-block:: Python

    gp.compute_model(
        gempy_model=geo_model,
        engine_config=gp.data.GemPyEngineConfig(
            backend=gp.data.AvailableBackends.PYTORCH,
            dtype='float64'
        )
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Setting Backend To: AvailableBackends.PYTORCH
    Condition number: 1546449.733468359.
    Chunking done: 206 chunks
    Condition number: 1545102.643054532.
    Chunking done: 258 chunks
    Condition number: 1447785.0114925415.
    Chunking done: 206 chunks
    Condition number: 40165630.352466166.
    Chunking done: 10548 chunks
    Condition number: 40165630.352466166.
    Chunking done: 14 chunks
    Chunking done: 14 chunks
    Chunking done: 21 chunks
    Chunking done: 21 chunks
    Chunking done: 80 chunks
    Chunking done: 80 chunks
    Chunking done: 11 chunks
    Chunking done: 14 chunks
    Chunking done: 11 chunks
    Chunking done: 550 chunks
    Chunking done: 38 chunks
    Condition number: 40165630.352466166.
    Chunking done: 35 chunks
    Condition number: 40165630.352466166.
    Chunking done: 33 chunks
    Chunking done: 8 chunks
    Chunking done: 10 chunks
    Chunking done: 8 chunks
    Chunking done: 389 chunks


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <b>Solutions:</b> 4 Octree Levels, 12 DualContouringMeshes
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 235-237

.. code-block:: Python

    gpv.plot_2d(geo_model, cell_number=[10], series_n=3, show_scalar=True)




.. image-sg:: /examples/real/images/sphx_glr_Hecho_002.png
   :alt: Cell Number: 10 Direction: y
   :srcset: /examples/real/images/sphx_glr_Hecho_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <gempy_viewer.modules.plot_2d.visualization_2d.Plot2D object at 0x7fc55bc2b8e0>



.. GENERATED FROM PYTHON SOURCE LINES 238-240

.. code-block:: Python

    gpv.plot_2d(geo_model, cell_number=[10], show_data=True)




.. image-sg:: /examples/real/images/sphx_glr_Hecho_003.png
   :alt: Cell Number: 10 Direction: y
   :srcset: /examples/real/images/sphx_glr_Hecho_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <gempy_viewer.modules.plot_2d.visualization_2d.Plot2D object at 0x7fc55bc61330>



.. GENERATED FROM PYTHON SOURCE LINES 241-243

.. code-block:: Python

    gpv.plot_2d(geo_model, section_names=['section'], show_data=True)




.. image-sg:: /examples/real/images/sphx_glr_Hecho_004.png
   :alt: section
   :srcset: /examples/real/images/sphx_glr_Hecho_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <gempy_viewer.modules.plot_2d.visualization_2d.Plot2D object at 0x7fc55bc2b8e0>



.. GENERATED FROM PYTHON SOURCE LINES 244-245

sphinx_gallery_thumbnail_number = 3

.. GENERATED FROM PYTHON SOURCE LINES 245-246

.. code-block:: Python

    gpv.plot_3d(geo_model, kwargs_plot_structured_grid={'opacity': .2})



.. image-sg:: /examples/real/images/sphx_glr_Hecho_005.png
   :alt: Hecho
   :srcset: /examples/real/images/sphx_glr_Hecho_005.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <gempy_viewer.modules.plot_3d.vista.GemPyToVista object at 0x7fc5bd54c4c0>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 38.012 seconds)


.. _sphx_glr_download_examples_real_Hecho.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: Hecho.ipynb <Hecho.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: Hecho.py <Hecho.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: Hecho.zip <Hecho.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
